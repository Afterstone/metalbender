"""Init tables heartbeat and resource_type

Revision ID: a241fce05bb3
Revises:
Create Date: 2023-10-03 16:03:23.144258

"""
from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op
from metalbender.data_access.models import RESOURCE_TYPES

# revision identifiers, used by Alembic.
revision: str = 'a241fce05bb3'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'resource_type',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )

    # Insert the GCE_INSTANCE resource type.
    for resources_type in RESOURCE_TYPES:
        op.execute(f"INSERT INTO resource_type (name) VALUES ('{resources_type}')")

    op.create_table(
        'heartbeat',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
        sa.Column('resource_name', sa.String(), nullable=False),
        sa.Column('resource_type_id', sa.Integer(), nullable=False),
        sa.Column('time_added', sa.DateTime(), nullable=False),
        sa.Column('time_requested', sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(['resource_type_id'], ['resource_type.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_heartbeat_resource_name_time_requested', 'heartbeat', ['resource_name', 'time_requested'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_heartbeat_resource_name_time_requested', table_name='heartbeat')
    op.drop_table('heartbeat')
    op.drop_table('resource_type')
    # ### end Alembic commands ###
